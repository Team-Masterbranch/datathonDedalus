LLM Interaction Log
Created: 2025-03-18 09:22:57.016340

Timestamp: 2025-03-18 09:23:26
================================================================================
Messages sent to LLM:

Role: system
Content: # prompts/system_intentions.txt
Eres un asistente de análisis de datos sanitarios. Tu tarea es convertir las solicitudes del usuario en intenciones estructuradas.
IMPORTANTE: Responde SOLO con JSON, sin texto de introducción ni explicaciones.

Hay cuatro tipos de intenciones:
1. COHORT_FILTER - para filtrar datos de pacientes
2. VISUALIZATION - para crear visualizaciones de datos
3. HELP - para proporcionar ayuda sobre las capacidades del sistema
4. UNKNOWN - para solicitudes que no se pueden clasificar

Para intenciones COHORT_FILTER, debes proporcionar:
- intention_type: "COHORT_FILTER"
- description: Una descripción clara del filtro
- query: Un diccionario que contiene:
  * Para consultas simples:
    - field: La columna de la base de datos a filtrar
    - operation: Uno de ["equals", "not_equals", "greater_than", "less_than", "between"]
    - value: El valor para filtrar (o array "values" para operación "between")
  * Para consultas compuestas:
    - operation: Uno de ["and", "or"]
    - criteria: Array de condiciones, cada una conteniendo:
      * field: La columna de la base de datos
      * operation: Uno de ["equals", "greater_than", "less_than", "between"]
      * value: El valor para filtrar
- filter_target: "CURRENT_COHORT" o "FULL_DATASET"
  * Usa "CURRENT_COHORT" cuando el usuario quiere refinar resultados existentes
  * Usa "FULL_DATASET" cuando se inicia una nueva búsqueda
  * Ejemplos:
    - "muestra pacientes mayores de 65" -> "FULL_DATASET" (nueva búsqueda)
    - "de estos, muestra solo hombres" -> "CURRENT_COHORT" (refinando resultados)
    - "entre ellos, encuentra diabéticos" -> "CURRENT_COHORT" (filtrado adicional)
    - "encuentra todas las mujeres" -> "FULL_DATASET" (nueva búsqueda)

Ejemplos de estructuras de consulta:
1. Consulta simple:
{
    "field": "Edad",
    "operation": "greater_than",
    "value": 65
}

2. Consulta compuesta con AND:
{
    "operation": "and",
    "criteria": [
        {
            "field": "Descripcion",
            "operation": "equals",
            "value": "Diabetes"
        },
        {
            "field": "Edad",
            "operation": "greater_than",
            "value": 31
        }
    ]
}

Para intenciones VISUALIZATION, debes proporcionar:
- intention_type: "VISUALIZATION"
- description: Una descripción clara de la visualización
- visualizer_request: Un diccionario conteniendo:
  * chart_type: Uno de ["bar", "pie", "scatter", "box", "histogram", "line"]
  * title: Título para la visualización
  * x_column: Columna para el eje x
  * y_column: Columna para el eje y (o "count" para frecuencia)
  * category_column: Columna opcional para agrupación
  * aggregation: Método de agregación opcional

Para intenciones HELP:
- intention_type: "HELP"

Para intenciones UNKNOWN:
- intention_type: "UNKNOWN"

Role: system
Content: The database schema includes detailed information about each column:
- Column name
- Data type
- Statistical information where applicable:
  * For numeric fields: min, max, mean values
  * For categorical fields: number of unique values, list of possible values
  * Missing values count
  * Distribution characteristics

Use this metadata to:
1. Choose appropriate fields for queries
2. Validate value ranges in filters
3. Select meaningful visualizations
4. Suggest relevant aggregations

Below is the current schema with all available metadata:
PacienteID: {'dtype': 'int64', 'unique_values': 33, 'missing_values': 0, 'min': 1.0, 'max': 33.0, 'mean': 17.74490430994243}
pacientes.Genero: {'dtype': 'object', 'unique_values': 2, 'missing_values': 0, 'possible_values': ['Femenino', 'Masculino']}
pacientes.Edad: {'dtype': 'int64', 'unique_values': 27, 'missing_values': 0, 'min': 19.0, 'max': 84.0, 'mean': 40.86860121363}
pacientes.Provincia: {'dtype': 'object', 'unique_values': 6, 'missing_values': 0}
pacientes.Latitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': 36.7194, 'max': 37.8847, 'mean': 37.069579127119965}
pacientes.Longitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': -6.9447, 'max': -2.4637, 'mean': -4.464786004356621}
alegias.Fecha_diagnostico: {'dtype': 'object', 'unique_values': 99, 'missing_values': 124}
alegias.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 124, 'min': 91930004.0, 'max': 414285001.0, 'mean': 175575326.4430479}
alegias.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 124}
condiciones.Fecha_inicio: {'dtype': 'object', 'unique_values': 95, 'missing_values': 374}
condiciones.Fecha_fin: {'dtype': 'object', 'unique_values': 49, 'missing_values': 374}
condiciones.Codigo_SNOMED: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
condiciones.Descripcion: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
encuentros.Tipo_encuentro: {'dtype': 'object', 'unique_values': 3, 'missing_values': 4, 'possible_values': ['Atención Primaria', 'Hospitalización', 'Urgencia']}
encuentros.Fecha_inicio: {'dtype': 'object', 'unique_values': 101, 'missing_values': 4}
encuentros.Fecha_fin: {'dtype': 'object', 'unique_values': 104, 'missing_values': 4}
medicationes.Fecha de inicio: {'dtype': 'object', 'unique_values': 56, 'missing_values': 0}
medicationes.Fecha de fin: {'dtype': 'object', 'unique_values': 29, 'missing_values': 8637}
medicationes.Código: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Nombre: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Dosis: {'dtype': 'object', 'unique_values': 41, 'missing_values': 0}
medicationes.Frecuencia: {'dtype': 'object', 'unique_values': 8, 'missing_values': 0}
medicationes.Vía de administración: {'dtype': 'object', 'unique_values': 5, 'missing_values': 0, 'possible_values': ['inhalación', 'intranasal', 'inyección', 'oral', 'tópica']}
procedimientos.Fecha_inicio: {'dtype': 'object', 'unique_values': 97, 'missing_values': 40}
procedimientos.Fecha_fin: {'dtype': 'object', 'unique_values': 95, 'missing_values': 40}
procedimientos.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 40, 'min': 48387007.0, 'max': 430193006.0, 'mean': 293466686.8495396}
procedimientos.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 40}

Role: system
Content: Example responses (note there is NO text before or after the JSON):
For "show patients older than 50":
{
    "intention_type": "COHORT_FILTER",
    "description": "Filter patients over 50 years old",
    "query": {
        "field": "age",
        "operation": "greater_than",
        "value": 50
    },
    "filter_target": "FULL_DATASET"
}

For "create age distribution chart":
{
    "intention_type": "VISUALIZATION",
    "description": "Show age distribution of patients",
    "visualizer_request": {
        "chart_type": "histogram",
        "title": "Age Distribution",
        "x_column": "age",
        "y_column": "count"
    }
}

For "what can you do?":
{
    "intention_type": "HELP",
}

For "make coffee":
{
    "intention_type": "UNKNOWN",
}

REMEMBER: Return ONLY the JSON object, with no additional text.

Role: user
Content: dame mujeres menor que 40 anos

LLM Response:
{
    "intention_type": "COHORT_FILTER",
    "description": "Filtrar mujeres menores de 40 años",
    "query": {
        "operation": "and",
        "criteria": [
            {
                "field": "pacientes.Genero",
                "operation": "equals",
                "value": "Femenino"
            },
            {
                "field": "pacientes.Edad",
                "operation": "less_than",
                "value": 40
            }
        ]
    },
    "filter_target": "FULL_DATASET"
}

================================================================================

Timestamp: 2025-03-18 09:24:23
================================================================================
Messages sent to LLM:

Role: system
Content: # prompts/system_intentions.txt
Eres un asistente de análisis de datos sanitarios. Tu tarea es convertir las solicitudes del usuario en intenciones estructuradas.
IMPORTANTE: Responde SOLO con JSON, sin texto de introducción ni explicaciones.

Hay cuatro tipos de intenciones:
1. COHORT_FILTER - para filtrar datos de pacientes
2. VISUALIZATION - para crear visualizaciones de datos
3. HELP - para proporcionar ayuda sobre las capacidades del sistema
4. UNKNOWN - para solicitudes que no se pueden clasificar

Para intenciones COHORT_FILTER, debes proporcionar:
- intention_type: "COHORT_FILTER"
- description: Una descripción clara del filtro
- query: Un diccionario que contiene:
  * Para consultas simples:
    - field: La columna de la base de datos a filtrar
    - operation: Uno de ["equals", "not_equals", "greater_than", "less_than", "between"]
    - value: El valor para filtrar (o array "values" para operación "between")
  * Para consultas compuestas:
    - operation: Uno de ["and", "or"]
    - criteria: Array de condiciones, cada una conteniendo:
      * field: La columna de la base de datos
      * operation: Uno de ["equals", "greater_than", "less_than", "between"]
      * value: El valor para filtrar
- filter_target: "CURRENT_COHORT" o "FULL_DATASET"
  * Usa "CURRENT_COHORT" cuando el usuario quiere refinar resultados existentes
  * Usa "FULL_DATASET" cuando se inicia una nueva búsqueda
  * Ejemplos:
    - "muestra pacientes mayores de 65" -> "FULL_DATASET" (nueva búsqueda)
    - "de estos, muestra solo hombres" -> "CURRENT_COHORT" (refinando resultados)
    - "entre ellos, encuentra diabéticos" -> "CURRENT_COHORT" (filtrado adicional)
    - "encuentra todas las mujeres" -> "FULL_DATASET" (nueva búsqueda)

Ejemplos de estructuras de consulta:
1. Consulta simple:
{
    "field": "Edad",
    "operation": "greater_than",
    "value": 65
}

2. Consulta compuesta con AND:
{
    "operation": "and",
    "criteria": [
        {
            "field": "Descripcion",
            "operation": "equals",
            "value": "Diabetes"
        },
        {
            "field": "Edad",
            "operation": "greater_than",
            "value": 31
        }
    ]
}

Para intenciones VISUALIZATION, debes proporcionar:
- intention_type: "VISUALIZATION"
- description: Una descripción clara de la visualización
- visualizer_request: Un diccionario conteniendo:
  * chart_type: Uno de ["bar", "pie", "scatter", "box", "histogram", "line"]
  * title: Título para la visualización
  * x_column: Columna para el eje x
  * y_column: Columna para el eje y (o "count" para frecuencia)
  * category_column: Columna opcional para agrupación
  * aggregation: Método de agregación opcional

Para intenciones HELP:
- intention_type: "HELP"

Para intenciones UNKNOWN:
- intention_type: "UNKNOWN"

Role: system
Content: The database schema includes detailed information about each column:
- Column name
- Data type
- Statistical information where applicable:
  * For numeric fields: min, max, mean values
  * For categorical fields: number of unique values, list of possible values
  * Missing values count
  * Distribution characteristics

Use this metadata to:
1. Choose appropriate fields for queries
2. Validate value ranges in filters
3. Select meaningful visualizations
4. Suggest relevant aggregations

Below is the current schema with all available metadata:
PacienteID: {'dtype': 'int64', 'unique_values': 33, 'missing_values': 0, 'min': 1.0, 'max': 33.0, 'mean': 17.74490430994243}
pacientes.Genero: {'dtype': 'object', 'unique_values': 2, 'missing_values': 0, 'possible_values': ['Femenino', 'Masculino']}
pacientes.Edad: {'dtype': 'int64', 'unique_values': 27, 'missing_values': 0, 'min': 19.0, 'max': 84.0, 'mean': 40.86860121363}
pacientes.Provincia: {'dtype': 'object', 'unique_values': 6, 'missing_values': 0}
pacientes.Latitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': 36.7194, 'max': 37.8847, 'mean': 37.069579127119965}
pacientes.Longitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': -6.9447, 'max': -2.4637, 'mean': -4.464786004356621}
alegias.Fecha_diagnostico: {'dtype': 'object', 'unique_values': 99, 'missing_values': 124}
alegias.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 124, 'min': 91930004.0, 'max': 414285001.0, 'mean': 175575326.4430479}
alegias.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 124}
condiciones.Fecha_inicio: {'dtype': 'object', 'unique_values': 95, 'missing_values': 374}
condiciones.Fecha_fin: {'dtype': 'object', 'unique_values': 49, 'missing_values': 374}
condiciones.Codigo_SNOMED: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
condiciones.Descripcion: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
encuentros.Tipo_encuentro: {'dtype': 'object', 'unique_values': 3, 'missing_values': 4, 'possible_values': ['Atención Primaria', 'Hospitalización', 'Urgencia']}
encuentros.Fecha_inicio: {'dtype': 'object', 'unique_values': 101, 'missing_values': 4}
encuentros.Fecha_fin: {'dtype': 'object', 'unique_values': 104, 'missing_values': 4}
medicationes.Fecha de inicio: {'dtype': 'object', 'unique_values': 56, 'missing_values': 0}
medicationes.Fecha de fin: {'dtype': 'object', 'unique_values': 29, 'missing_values': 8637}
medicationes.Código: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Nombre: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Dosis: {'dtype': 'object', 'unique_values': 41, 'missing_values': 0}
medicationes.Frecuencia: {'dtype': 'object', 'unique_values': 8, 'missing_values': 0}
medicationes.Vía de administración: {'dtype': 'object', 'unique_values': 5, 'missing_values': 0, 'possible_values': ['inhalación', 'intranasal', 'inyección', 'oral', 'tópica']}
procedimientos.Fecha_inicio: {'dtype': 'object', 'unique_values': 97, 'missing_values': 40}
procedimientos.Fecha_fin: {'dtype': 'object', 'unique_values': 95, 'missing_values': 40}
procedimientos.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 40, 'min': 48387007.0, 'max': 430193006.0, 'mean': 293466686.8495396}
procedimientos.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 40}

Role: system
Content: Example responses (note there is NO text before or after the JSON):
For "show patients older than 50":
{
    "intention_type": "COHORT_FILTER",
    "description": "Filter patients over 50 years old",
    "query": {
        "field": "age",
        "operation": "greater_than",
        "value": 50
    },
    "filter_target": "FULL_DATASET"
}

For "create age distribution chart":
{
    "intention_type": "VISUALIZATION",
    "description": "Show age distribution of patients",
    "visualizer_request": {
        "chart_type": "histogram",
        "title": "Age Distribution",
        "x_column": "age",
        "y_column": "count"
    }
}

For "what can you do?":
{
    "intention_type": "HELP",
}

For "make coffee":
{
    "intention_type": "UNKNOWN",
}

REMEMBER: Return ONLY the JSON object, with no additional text.

Role: user
Content: dame mujeres menor que 40 anos

Role: user
Content: hay astmaticas entre ellas?

LLM Response:
{
  "intention_type": "COHORT_FILTER",
  "description": "Filtrar mujeres menores de 40 años y verificar si hay asmáticas entre ellas",
  "query": {
    "operation": "and",
    "criteria": [
      {
        "field": "pacientes.Genero",
        "operation": "equals",
        "value": "Femenino"
      },
      {
        "field": "pacientes.Edad",
        "operation": "less_than",
        "value": 40
      }
    ]
  },
  "filter_target": "FULL_DATASET"
}

================================================================================

Timestamp: 2025-03-18 09:25:46
================================================================================
Messages sent to LLM:

Role: system
Content: # prompts/system_intentions.txt
Eres un asistente de análisis de datos sanitarios. Tu tarea es convertir las solicitudes del usuario en intenciones estructuradas.
IMPORTANTE: Responde SOLO con JSON, sin texto de introducción ni explicaciones.

Hay cuatro tipos de intenciones:
1. COHORT_FILTER - para filtrar datos de pacientes
2. VISUALIZATION - para crear visualizaciones de datos
3. HELP - para proporcionar ayuda sobre las capacidades del sistema
4. UNKNOWN - para solicitudes que no se pueden clasificar

Para intenciones COHORT_FILTER, debes proporcionar:
- intention_type: "COHORT_FILTER"
- description: Una descripción clara del filtro
- query: Un diccionario que contiene:
  * Para consultas simples:
    - field: La columna de la base de datos a filtrar
    - operation: Uno de ["equals", "not_equals", "greater_than", "less_than", "between"]
    - value: El valor para filtrar (o array "values" para operación "between")
  * Para consultas compuestas:
    - operation: Uno de ["and", "or"]
    - criteria: Array de condiciones, cada una conteniendo:
      * field: La columna de la base de datos
      * operation: Uno de ["equals", "greater_than", "less_than", "between"]
      * value: El valor para filtrar
- filter_target: "CURRENT_COHORT" o "FULL_DATASET"
  * Usa "CURRENT_COHORT" cuando el usuario quiere refinar resultados existentes
  * Usa "FULL_DATASET" cuando se inicia una nueva búsqueda
  * Ejemplos:
    - "muestra pacientes mayores de 65" -> "FULL_DATASET" (nueva búsqueda)
    - "de estos, muestra solo hombres" -> "CURRENT_COHORT" (refinando resultados)
    - "entre ellos, encuentra diabéticos" -> "CURRENT_COHORT" (filtrado adicional)
    - "encuentra todas las mujeres" -> "FULL_DATASET" (nueva búsqueda)

Ejemplos de estructuras de consulta:
1. Consulta simple:
{
    "field": "Edad",
    "operation": "greater_than",
    "value": 65
}

2. Consulta compuesta con AND:
{
    "operation": "and",
    "criteria": [
        {
            "field": "Descripcion",
            "operation": "equals",
            "value": "Diabetes"
        },
        {
            "field": "Edad",
            "operation": "greater_than",
            "value": 31
        }
    ]
}

Para intenciones VISUALIZATION, debes proporcionar:
- intention_type: "VISUALIZATION"
- description: Una descripción clara de la visualización
- visualizer_request: Un diccionario conteniendo:
  * chart_type: Uno de ["bar", "pie", "scatter", "box", "histogram", "line"]
  * title: Título para la visualización
  * x_column: Columna para el eje x
  * y_column: Columna para el eje y (o "count" para frecuencia)
  * category_column: Columna opcional para agrupación
  * aggregation: Método de agregación opcional

Para intenciones HELP:
- intention_type: "HELP"

Para intenciones UNKNOWN:
- intention_type: "UNKNOWN"

Role: system
Content: The database schema includes detailed information about each column:
- Column name
- Data type
- Statistical information where applicable:
  * For numeric fields: min, max, mean values
  * For categorical fields: number of unique values, list of possible values
  * Missing values count
  * Distribution characteristics

Use this metadata to:
1. Choose appropriate fields for queries
2. Validate value ranges in filters
3. Select meaningful visualizations
4. Suggest relevant aggregations

Below is the current schema with all available metadata:
PacienteID: {'dtype': 'int64', 'unique_values': 33, 'missing_values': 0, 'min': 1.0, 'max': 33.0, 'mean': 17.74490430994243}
pacientes.Genero: {'dtype': 'object', 'unique_values': 2, 'missing_values': 0, 'possible_values': ['Femenino', 'Masculino']}
pacientes.Edad: {'dtype': 'int64', 'unique_values': 27, 'missing_values': 0, 'min': 19.0, 'max': 84.0, 'mean': 40.86860121363}
pacientes.Provincia: {'dtype': 'object', 'unique_values': 6, 'missing_values': 0}
pacientes.Latitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': 36.7194, 'max': 37.8847, 'mean': 37.069579127119965}
pacientes.Longitud: {'dtype': 'float64', 'unique_values': 6, 'missing_values': 0, 'min': -6.9447, 'max': -2.4637, 'mean': -4.464786004356621}
alegias.Fecha_diagnostico: {'dtype': 'object', 'unique_values': 99, 'missing_values': 124}
alegias.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 124, 'min': 91930004.0, 'max': 414285001.0, 'mean': 175575326.4430479}
alegias.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 124}
condiciones.Fecha_inicio: {'dtype': 'object', 'unique_values': 95, 'missing_values': 374}
condiciones.Fecha_fin: {'dtype': 'object', 'unique_values': 49, 'missing_values': 374}
condiciones.Codigo_SNOMED: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
condiciones.Descripcion: {'dtype': 'object', 'unique_values': 8, 'missing_values': 374}
encuentros.Tipo_encuentro: {'dtype': 'object', 'unique_values': 3, 'missing_values': 4, 'possible_values': ['Atención Primaria', 'Hospitalización', 'Urgencia']}
encuentros.Fecha_inicio: {'dtype': 'object', 'unique_values': 101, 'missing_values': 4}
encuentros.Fecha_fin: {'dtype': 'object', 'unique_values': 104, 'missing_values': 4}
medicationes.Fecha de inicio: {'dtype': 'object', 'unique_values': 56, 'missing_values': 0}
medicationes.Fecha de fin: {'dtype': 'object', 'unique_values': 29, 'missing_values': 8637}
medicationes.Código: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Nombre: {'dtype': 'object', 'unique_values': 81, 'missing_values': 0}
medicationes.Dosis: {'dtype': 'object', 'unique_values': 41, 'missing_values': 0}
medicationes.Frecuencia: {'dtype': 'object', 'unique_values': 8, 'missing_values': 0}
medicationes.Vía de administración: {'dtype': 'object', 'unique_values': 5, 'missing_values': 0, 'possible_values': ['inhalación', 'intranasal', 'inyección', 'oral', 'tópica']}
procedimientos.Fecha_inicio: {'dtype': 'object', 'unique_values': 97, 'missing_values': 40}
procedimientos.Fecha_fin: {'dtype': 'object', 'unique_values': 95, 'missing_values': 40}
procedimientos.Codigo_SNOMED: {'dtype': 'float64', 'unique_values': 10, 'missing_values': 40, 'min': 48387007.0, 'max': 430193006.0, 'mean': 293466686.8495396}
procedimientos.Descripcion: {'dtype': 'object', 'unique_values': 10, 'missing_values': 40}

Role: system
Content: Example responses (note there is NO text before or after the JSON):
For "show patients older than 50":
{
    "intention_type": "COHORT_FILTER",
    "description": "Filter patients over 50 years old",
    "query": {
        "field": "age",
        "operation": "greater_than",
        "value": 50
    },
    "filter_target": "FULL_DATASET"
}

For "create age distribution chart":
{
    "intention_type": "VISUALIZATION",
    "description": "Show age distribution of patients",
    "visualizer_request": {
        "chart_type": "histogram",
        "title": "Age Distribution",
        "x_column": "age",
        "y_column": "count"
    }
}

For "what can you do?":
{
    "intention_type": "HELP",
}

For "make coffee":
{
    "intention_type": "UNKNOWN",
}

REMEMBER: Return ONLY the JSON object, with no additional text.

Role: user
Content: dame mujeres menor que 40 anos

Role: user
Content: hay astmaticas entre ellas?

Role: user
Content: solo necesito astmáticas en el cohort

LLM Response:
{
  "intention_type": "COHORT_FILTER",
  "description": "Filter for asthmatic women under 40 years old",
  "query": {
    "operation": "and",
    "criteria": [
      {
        "field": "pacientes.Genero",
        "operation": "equals",
        "value": "Femenino"
      },
      {
        "field": "pacientes.Edad",
        "operation": "less_than",
        "value": 40
      },
      {
        "field": "condiciones.Descripcion",
        "operation": "equals",
        "value": "Asma"
      }
    ]
  },
  "filter_target": "FULL_DATASET"
}

================================================================================
